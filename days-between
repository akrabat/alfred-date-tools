#!/usr/bin/env zsh

function error {
  # print error result for Alfred
  cat << EOT
{
  "items": [
    {
      "title": "$1"
    }
  ]
}
EOT
  exit
}

function date_to_seconds {
    date="$1"

    # basic check for validity: must be 8 characters if it's numbers only
    if [[ -z ${date//[0-9 ]/} && ${#date} -ne 8 ]] ; then
        error "Date '$1' format is invalid"
    fi    

    # convert date to seconds
    date=$(gdate -d "$date" +%s)
    if [ $? -ne 0 ]; then
        error "Date '$1' cannot be parsed"
    fi

    echo "$date"
}

function with_suffix {
  number="$1"
  case $number in
    1?) echo "${number}th" ;;
    *1) echo "${number}st" ;;
    *2) echo "${number}nd" ;;
    *3) echo "${number}rd" ;;
    *)  echo "${number}th" ;;
  esac
}

function pretty_date {
    day=$(with_suffix "$(gdate -d "$1" +%-e)")
    pretty=$(gdate -d "$1" "+$day %B %Y")
    echo "$pretty"
}

# Split the input argument into two dates
IFS=',' read -r date1 date2 <<< "$*"

# date1="$1"
date2=${date2:-"today"}

# Convert dates to seconds
seconds1=$(date_to_seconds "$date1")
seconds2=$(date_to_seconds "$date2")

# Calculate difference in seconds
difference=$((seconds2 - seconds1))

# Convert difference to days
days=$((difference / 86400))

# Get absolute value
days=${days#-}

# pretty print dates
pretty_date1=$(pretty_date "$date1")
pretty_date2=$(pretty_date "$date2")

#echo "The number of days between $pretty_date1 and $pretty_date2 is $days days."

# print result for Alfred
cat << EOT
{
  "items": [
    {
      "title": "$days days between $pretty_date1 and $pretty_date2.",
      "subtitle": "Press enter to paste or âŒ˜C to copy",
      "arg": "$days"     
    }
  ]
}
EOT
